import pygame

import brick as m
import spike

def top_init(screen,tops,image):
    for top in ((30,-1),(60,-1),(90,-1),(120,-1),(150,-1),(180,-1),(210,-1),(240,-1),(270,-1),(360,-1),(390,-1),(420,-1),(450,-1),(510,-1),(540,-1),(570,-1),(600,-1),(630,-1),(660,-1),(690,-1),(60,89),(90,89),(120,89),(150,89),(180,89),(390,179),(420,179),(450,179),(480,179),(30,209),(60,209),(90,209),(510,209),(540,209),(660,209),(690,209),(150,269),(60,299),(420,299),(450,299),(540,299),(660,299),(690,299),(180,329),(210,329),(390,329),(450,359),(480,359),(30,389),(60,389),(90,389),(660,389),(690,389),(210,419),(240,419),(270,479),(390,479),(420,479),(450,479),(30,539),(60,539),(90,539),(120,539),(150,539),(180,539),(210,539),(240,539),(420,539),(480,539),(540,539),(570,539),(600,539),(630,539),(660,539),(690,539)):
        top_b = m.Top(screen,top,image)
        tops.add(top_b)
    return tops

def bottom_init(screen,bottoms,image):
    for bottom in ((30,15),(60,15),(90,15),(120,15),(150,15),(180,15),(210,15),(240,15),(270,15),(360,15),(390,15),(420,15),(450,15),(510,15),(540,15),(570,15),(600,15),(630,15),(660,15),(690,15),(90,105),(120,105),(150,105),(210,135),(480,135),(390,195),(420,195),(450,195),(30,225),(60,225),(90,225),(120,225),(510,225),(540,225),(570,225),(660,225),(690,225),(420,315),(450,315),(480,315),(600,315),(630,315),(660,315),(690,315),(150,345),(180,345),(210,345),(240,345),(390,345),(420,375),(450,375),(480,375),(30,405),(60,405),(90,405),(660,405),(690,405),(210,435),(240,435),(570,435),(420,495),(600,495),(30,555),(60,555),(90,555),(120,555),(150,555),(180,555),(210,555),(240,555),(420,555),(480,555),(540,555),(570,555),(600,555),(630,555),(660,555),(690,555)):
        bottom_b = m.Bottom(screen,bottom,image)
        bottoms.add(bottom_b)
    return bottoms

def left_init(screen,lefts,image):
    for left in ((-1,30),(299,30),(329,30),(479,30),(554,30),(719,30),(-1,60),(299,60),(329,60),(479,60),(554,60),(719,60),(-1,90),(59,90),(299,90),(329,90),(479,90),(554,90),(719,90),(-1,120),(179,120),(329,120),(479,120),(719,120),(-1,150),(179,150),(329,150),(719,150),(-1,180),(179,180),(329,180),(389,180),(719,180),(329,210),(479,210),(629,210),(-1,240),(329,240),(479,240),(629,240),(719,240),(-1,270),(149,270),(239,270),(479,270),(629,270),(719,270),(-1,300),(59,300),(149,300),(239,300),(419,300),(539,300),(599,300),(-1,330),(149,330),(389,330),(539,330),(719,330),(-1,360),(299,360),(389,360),(539,360),(719,360),(299,390),(389,390),(659,390),(-1,420),(179,420),(299,420),(359,420),(389,420),(569,420),(719,420),(-1,450),(299,450),(359,450),(389,450),(719,450),(-1,480),(269,480),(299,480),(329,480),(359,480),(509,480),(599,480),(719,480),(-1,510),(269,510),(299,510),(329,510),(359,510),(389,510),(449,510),(509,510),(719,510)):
        left_b = m.Left(screen,left,image)
        lefts.add(left_b)
    return lefts

def right_init(screen,rights,image):
    for right in ((15,30),(315,30),(345,30),(495,30),(570,30),(735,30),(15,60),(315,60),(345,60),(495,60),(570,60),(735,60),(15,90),(195,90),(345,90),(495,90),(570,90),(735,90),(15,120),(195,120),(345,120),(495,120),(735,120),(15,150),(195,150),(345,150),(735,150),(15,180),(195,180),(345,180),(495,180),(735,180),(135,210),(345,210),(585,210),(15,240),(345,240),(495,240),(645,240),(735,240),(15,270),(165,270),(255,270),(495,270),(645,270),(735,270),(15,300),(165,300),(255,300),(495,300),(555,300),(15,330),(255,330),(555,330),(735,330),(15,360),(315,360),(405,360),(495,360),(555,360),(735,360),(105,390),(315,390),(405,390),(15,420),(255,420),(315,420),(405,420),(585,420),(735,420),(15,450),(315,450),(375,450),(405,450),(735,450),(15,480),(315,480),(345,480),(375,480),(465,480),(525,480),(615,480),(735,480),(15,510),(285,510),(315,510),(345,510),(375,510),(405,510),(465,510),(525,510),(555,510),(735,510)):
        right_b = m.Right(screen,right,image)
        rights.add(right_b)
    return rights

def save_init(screen,saves,image):
    for save in ((60,490),(195,285),(405,75)):
        save_b = m.Save(screen,save,image)
        saves.add(save_b)
    return saves

def saving():
    return ((60,490),(60,490),(195,285),(405,75))

def fake_init(screen,fake_s,image_s,image_e,image_sd):
    for spike_f in ((75,30,1),(165,30,1),(270,30,1),(120,60,0),(210,90,0),(60,120,1),(240,120,3),(300,120,1),(555,120,1),(30,180,0),(90,180,0),(120,180,0),(540,180,0),(570,180,0),(630,180,0),(660,180,0),(690,180,0),(180,210,1),(450,210,1),(240,240,0),(450,240,2),(330,270,1),(450,270,0),(600,270,0),(90,300,3),(120,300,2),(60,330,1),(300,330,0),(420,330,0),(450,330,1),(180,390,0),(360,390,0),(540,390,1),(570,390,0),(330,420,0),(690,420,1),(180,450,1),(510,450,0),(600,450,0),(690,450,2),(240,480,0),(540,480,0),(690,480,2),(150,510,0),(210,510,2),(480,510,0),(690,510,0)):
        spike_f_b = m.Spike(screen,spike_f,image_s)
        fake_s.append(spike_f_b)
    for edge in ((0,0),(300,0),(330,0),(480,0),(555,0),(720,0),(60,90),(180,90),(300,90),(555,90),(210,120),(480,120),(180,180),(390,180),(480,180),(0,210),(120,210),(480,210),(570,210),(630,210),(720,210),(330,240),(150,270),(240,270),(60,300),(420,300),(480,300),(540,300),(600,300),(630,300),(720,300),(150,330),(240,330),(390,330),(300,360),(420,360),(480,360),(540,360),(0,390),(90,390),(660,390),(720,390),(180,420),(240,420),(360,420),(570,420),(330,450),(270,480),(390,480),(450,480),(510,480),(600,480),(240,510),(540,510),(0,540),(270,540),(300,540),(330,540),(360,540),(390,540),(450,540),(510,540),(720,540)):
        edge_b = m.Edge(screen,edge,image_e)
        fake_s.append(edge_b)
    for saved in ((60,490),(195,285),(405,75)):
        saved_b = m.Saved(screen,saved,image_sd)
        fake_s.append(saved_b)
    return fake_s

def spike_init(spikes,image_s,image_h,image_z):
    for spike_s_ in ((89,30),(179,30),(284,30),(134,60),(224,90),(74,120),(240,120),(314,120),(569,120),(44,180),(104,180),(134,180),(554,180),(584,180),(644,180),(674,180),(704,180),(194,210),(464,210),(254,240),(478,240),(344,270),(464,270),(614,270),(90,300),(133,300),(74,330),(314,330),(434,330),(464,330),(194,390),(374,390),(554,390),(584,390),(344,420),(704,420),(194,450),(524,450),(614,450),(718,450),(254,480),(554,480),(718,480),(164,510),(238,510),(494,510),(704,510)):
        spike_s_b = spike.Shu(image_s,spike_s_)
        spikes.add(spike_s_b)
    for spike_h_ in ((75,30),(165,30),(270,30),(120,88),(210,118),(60,120),(240,134),(300,120),(555,120),(30,208),(90,208),(120,208),(540,208),(570,208),(630,208),(660,208),(690,208),(180,210),(450,210),(240,268),(450,254),(330,270),(450,298),(600,298),(90,314),(120,313),(60,330),(300,358),(420,358),(450,330),(180,418),(360,418),(540,390),(570,418),(330,448),(690,420),(180,450),(510,478),(600,478),(690,464),(240,508),(540,508),(690,494),(150,538),(210,524),(480,538),(690,538)):
        spike_h_b = spike.Heng(image_h,spike_h_)
        spikes.add(spike_h_b)
    for spike_z_ in ((82,30),(172,30),(277,30),(127,74),(217,104),(67,120),(240,127),(307,120),(562,120),(37,194),(97,194),(127,194),(547,194),(577,194),(637,194),(667,194),(697,194),(187,210),(457,210),(247,254),(464,247),(337,270),(457,284),(607,284),(90,307),(134,307),(67,330),(307,344),(427,344),(457,330),(187,404),(367,404),(547,390),(577,404),(337,434),(697,420),(187,450),(517,464),(607,464),(704,457),(247,494),(547,494),(704,487),(157,524),(224,517),(487,524),(697,524)):
        spike_z_b = spike.Zhong(image_z,spike_z_)
        spikes.add(spike_z_b)
    return spikes